#
# Xilinx Zynq-7000 All Programmable SoC
#
# http://www.xilinx.com/products/silicon-devices/soc/zynq-7000/index.htm
#

if { [info exists PL_TAPID] } {
    set _PL_TAPID $PL_TAPID
} else {
    set _PL_TAPID 0x23727093
}

set _CHIPNAME zynq
set _TARGETNAME $_CHIPNAME.cpu

# pl tap(Test Access Port)
jtag newtap zynq_pl bs -irlen 6 -ignore-version -ircapture 0x1 -irmask 0x03 -expected-id $_PL_TAPID
# ps tap
jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id 0x4ba00477

dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu

target create ${_TARGETNAME}1 cortex_a -dap $_CHIPNAME.dap -coreid 1 -dbgbase 0x80092000
target create ${_TARGETNAME}0 cortex_a -dap $_CHIPNAME.dap -coreid 0 -dbgbase 0x80090000
# target smp ${_TARGETNAME}0 ${_TARGETNAME}1

${_TARGETNAME}0 configure -event reset-assert-post "cortex_a dbginit"
${_TARGETNAME}1 configure -event reset-assert-post "cortex_a dbginit"
# ${_TARGETNAME}0 configure -event reset-assert-post "cortex_a dbginit"

target smp ${_TARGETNAME}0 ${_TARGETNAME}1

pld device virtex2 zynq_pl.bs 1

set XC7_JSHUTDOWN 0x0d
set XC7_JPROGRAM 0x0b
set XC7_JSTART 0x0c
set XC7_BYPASS 0x3f

proc zynqpl_program {tap} {
	global XC7_JSHUTDOWN XC7_JPROGRAM XC7_JSTART XC7_BYPASS
	irscan $tap $XC7_JSHUTDOWN
	irscan $tap $XC7_JPROGRAM
	runtest 60000
	#JSTART prevents this from working...
	#irscan $tap $XC7_JSTART
	runtest 2000
	irscan $tap $XC7_BYPASS
	runtest 2000
}

# pld create $_CHIPNAME.pld virtex2 -chain-position $_CHIPNAME.tap -no_jstart
# virtex2 set_user_codes $_CHIPNAME.pld 0x02 0x03 0x22 0x23
